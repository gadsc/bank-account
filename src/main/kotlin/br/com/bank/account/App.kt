/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package br.com.bank.account

import com.fasterxml.jackson.databind.DeserializationFeature
import com.fasterxml.jackson.databind.ObjectMapper
import com.fasterxml.jackson.databind.SerializationFeature
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule
import com.fasterxml.jackson.module.kotlin.KotlinModule
import java.io.BufferedReader
import java.io.InputStreamReader
import kotlin.system.exitProcess

class App {
    val greeting: String
        get() {
            return "Operations in a specific account!\nPress 0 to exit..."
        }
}

fun main(args: Array<String>) {
    println(App().greeting)
    val reader = BufferedReader(InputStreamReader(System.`in`))
    val content = StringBuilder()
    val mapper = ObjectMapper().registerModule(KotlinModule())
        .registerModule(JavaTimeModule())
        .enable(SerializationFeature.WRAP_ROOT_VALUE)
        .enable(DeserializationFeature.UNWRAP_ROOT_VALUE)
        .disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)

    while (true) {
        val read = readLine()!!
        val event = with(read) {
            when {
                contains("account") -> mapper.readValue(read, Account::class.java)
                contains("transaction") -> mapper.readValue(read, Transaction::class.java)
                equals("0") -> exitProcess(0)
                else -> read
            }
        }

        println(event)
    }
}
